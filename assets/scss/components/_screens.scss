.o-screens {
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: contain;
  display: flex;
  margin-bottom: 60px;
  margin-top: 60px;
  position: relative;

  @include breakpoint(from-medium) {
    margin-bottom: 100px;
    margin-top: 100px;
  }

  @include breakpoint(from-large) {
    margin-bottom: calc(200px - 1em);
    margin-top: calc(200px - 1em);
  }

  &__screen {
    z-index: 1;
  }

  &__bg {
    display: block;
    height: auto;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translateY(-50%) translateX(-50%);
    width: 100%;
    width: calc(100vw - var(--scrollbar-width));
    z-index: 1;
  }

  &__caption {
  }

  &.mobile {
    justify-content: center;

    .o-screens__screen {
      width: 190px;

      @include breakpoint(from-medium) {
        width: 250px;
      }

      @include breakpoint(from-large) {
        width: 300px;
      }
    }

    .o-screens__bg {
      width: 80%;
    }

    &.count {

      &-2 {
        justify-content:space-between;

        .o-screens__screen {
          &:nth-child(1) {
            margin-left: .5rem;
          }
        }

        @include breakpoint(from-medium) {
          justify-content:center;

          .o-screens__screen {
            margin-left: 1rem;
            margin-right: 1rem;
          }
        }

        @include breakpoint(from-medium) {
          justify-content:center;

          .o-screens__screen {
            margin-left: 2rem;
            margin-right: 2rem;
          }
        }

        .o-screens__bg {
          width: calc(100vw - var(--scrollbar-width));
        }
      }

      &-3 {
        justify-content:space-between;

        .o-screens__screen {
          margin-left: 0;
          margin-right: 0;

          &:nth-child(1) {
            margin-left: .5rem;
            margin-right: .5rem;
          }
        }

        .o-screens__bg {
          width: 110%;
        }
      }
    }

    .o-screens__screen {
      img {
        display: block;
        height: auto;
        position: absolute;
        top: 0;
        width: 100%;
      }

      video {
        display: block;
        position: absolute;
        top: 0;
        height: 100%;
        width: 100%;
      }
    }

    .o-screens__chrome {
      background: $color-gray-deep;
      border-radius: 18px;
      box-shadow:10px 10px 60px rgba($color-black, .14);
      padding: 6%;

      @include breakpoint(from-medium) {
        border-radius: 20px;
        padding:0.8rem;
      }

      @include breakpoint(from-large) {
        border-radius: 22px;
      }
    }

    .o-screens__mask {
      border-radius: 10px;
      display: block;
      height: 0;
      overflow: hidden;
      padding-top: 216%;
      position: relative;
      width: 100%;
    }
  }

  &.desktop {
    box-shadow:10px 10px 60px rgba($color-black, 0.14);
    max-width: 1400px;

    .o-screens__bg {
      width: 110%;
    }

    .o-screens__screen {
      img {
        display: block;
        height: auto;
        width: 100%;
      }
    }

    .o-screens__chrome {
      background: $color-gray-deep;
      border-radius: 6px 6px 0 0;
      padding-top: 20px;

      &:before {
        color: #444;
        content: '⬤ ⬤ ⬤';
        font-size: 6px;
        left: 7px;
        letter-spacing: 1px;
        position: absolute;
        top: 7px;

        @include breakpoint(from-medium) {
          font-size: 10px;
          left: 12px;
          top: 12px;
        }
      }
      @include breakpoint(from-medium) {
        padding-top: 37px;
      }
    }
  }

  // Remove the margin-top of a screen following a screen
  & + .o-screens {
    margin-top: 0;
  }
}

.c-screens {
  @extend %u-pos-relative;
  @extend %u-flex;
  @extend %u-fw-wrap;
  @extend %u-ai-center;
  @extend %u-jc-center;

  $self: &;

  margin-top: calc(var(--container-v-pad) * 2);
  margin-bottom: calc(var(--container-v-pad) * 2);

  img {
    @extend %u-block;
    @extend %u-width-100pc;
    @extend %u-height-auto;
  }

  &__background {
    @extend %u-pos-absolute;
    @extend %u-z-index--1;

    width: 100%;
    width: calc(100vw - var(--scrollbar-width));

    @include breakpoint(upto-medium) {
      overflow: hidden;
      height: 100%;

      img {
        position: absolute;
        left: 50%;
        width: auto;
        height: 100%;
        transform: translateX(-50%);
      }
    }

    @include breakpoint(from-medium) {

    }
  }

  &__screen {
    @extend %u-flex;
  }

  &__device {
    @extend %u-pos-relative;
    box-shadow: 1px 3px 20px rgba(0, 0, 0, .2);

    &--desktop {
      @extend %u-ov-hidden;
      width: var(--container-width);
      max-width: $global-max-width;
      border-radius: 7px;

      // TODO: Set :before and :after px values off css variable that
      // changes between breakpoints or dynamically somehow

      // Trying to get a CSS variable to be 36px from the width from 1035px

      // Trying to get 36px from 100vw @ 1440px, scaling down at "half speed"
      --titleBarSize: calc(1.25vw + 18px);
      --titleBarMax: 36px;

      &:before {
        @extend %u-content;
        @extend %u-flex;
        @extend %u-bg-color-gray-deep;
        @extend %u-ai-center;
        @extend %u-jc-flex-start;
        height: var(--titleBarSize);
        max-height: var(--titleBarMax);
      }

      &:after {
        @extend %u-content;
        @extend %u-pos-absolute;
        @extend %u-left;
        @extend %u-round;

        // From ~1440px screen, and as a fallback if vars/calcs not supported
        top: 14px;
        width: 9px;
        height: 9px;
        box-shadow: 16px 0 0 #444, 31px 0 0 #444, 46px 0 0 #444;

        @include breakpoint(upto-full) {
          // These are all calculated from --titleBarSize,
          // with 100 / 36 * intended px size / 100
          top: calc(.389 * var(--titleBarSize)); // 14px;
          width: calc(.25 * var(--titleBarSize));
          height: calc(.25 * var(--titleBarSize));
          // The dots
          box-shadow: calc(.444 * var(--titleBarSize)) 0 0 #444,
                      calc(.861 * var(--titleBarSize)) 0 0 #444,
                      calc(1.27 * var(--titleBarSize)) 0 0 #444;
        }
      }

      &--light {

      }

      &--dark {
        color: #444;
      }
    }

    &--mobile {
      @extend %u-flex;
      @extend %u-mv-2;
      @extend %u-mh-6--from-small;

      border-radius: 34px;

      img {
        width: 260px;
        margin: 14px;
        background-color: #333; // Makes sure there's no "gaps"
        border-radius: 20px;
      }

      &--light {

      }

      &--dark {

        img {
          // TODO: Refine box shadow "highlight"
          box-shadow: 0 0 14px #666,
                      0 0 0 14px #333;
        }
      }
    }
  }

  // Remove the margin-top of a screen shortcode following a screen shortcode
  & + #{$self} {
    margin-top: 0;
  }
}
