.c-screens {
  $self: &;
  @extend %u-pos-relative;
  @extend %u-flex;
  @extend %u-ai-center;
  @extend %u-fw-wrap;
  @extend %u-border-box;

  align-content: center;
  padding: Min(calc(2rem + 4vw), 4rem);
  row-gap: Min(calc(2rem + 4vw), 4rem);
  column-gap: 6rem;

  @include breakpoint(from-large) {
    min-height: calc(100vh - var(--edge-gutter) * 2);
  }

  &__background {
    @extend %u-pos-absolute;
    @extend %u-z-index--1;

    width: 100%;
    width: calc(100vw - var(--scrollbar-width));

    img {
      @extend %u-block;
      @extend %u-width-100pc;
      @extend %u-height-auto;
    }

    @include breakpoint(upto-medium) {
      overflow: hidden;
      height: 100%;

      img {
        position: absolute;
        left: 50%;
        width: auto;
        height: 100%;
        transform: translateX(-50%);
      }
    }
  }

  &__device {
    @extend %u-pos-relative;

    #{$self}__media {
      opacity: 0;
      transition: .2s opacity .8s;
    }

    > * {
      @extend %u-block;
      @extend %u-width-100pc;
      @extend %u-height-auto;
    }

    &--desktop {
      // 36px from 100vw @ 1440px, scaling down at "half speed"
      $titleBarSize: calc(1.25vw + 18px);
      $titleBarMax: 36px;

      @extend %u-ov-hidden;
      @extend %u-bg-color-gray-bluish;
      width: var(--container-width);
      max-width: $global-max-width;
      height: 0;
      padding-bottom: calc(var(--container-width) * .54 + #{$titleBarSize} - 1px);
      border-radius: 7px;

      @include breakpoint(from-full) {
        padding-bottom: 594px; // 558px img height + 36px title bar
      }

      &:before {
        @extend %u-content;
        @extend %u-flex;
        @extend %u-bg-color-gray-deep;
        @extend %u-ai-center;
        @extend %u-jc-flex-start;
        height: $titleBarSize;
        max-height: $titleBarMax;

        // Animated image loading line
        box-shadow: -1035px 2px $color-orange;
        transition: 1s box-shadow;
      }

      &:after {
        @extend %u-content;
        @extend %u-pos-absolute;
        @extend %u-left;
        @extend %u-round;

        // From ~1440px screen, and as a fallback if vars/calcs not supported
        top: 14px;
        width: 9px;
        height: 9px;
        box-shadow: 16px 0 0 #444, 31px 0 0 #444, 46px 0 0 #444;

        @include breakpoint(upto-full) {
          // These are all calculated from --titleBarSize,
          // with 100 / 36 * intended px size / 100
          top: calc(.389 * #{$titleBarSize}); // 14px;
          width: calc(.25 * #{$titleBarSize});
          height: calc(.25 * #{$titleBarSize});
          // The dots
          box-shadow: calc(.444 * #{$titleBarSize}) 0 0 #444,
                      calc(.861 * #{$titleBarSize}) 0 0 #444,
                      calc(1.27 * #{$titleBarSize}) 0 0 #444;
        }
      }

      &.js-onscreen:before {
        // Animated image loading line
        box-shadow: 0 2px $color-orange;
      }

      &.js-onscreen > #{$self}__media {
        opacity: 1 !important;
      }

      &--light {
        box-shadow: 1px 3px 20px rgba(0, 0, 0, .1);
      }

      &--dark {
        box-shadow: 1px 3px 20px rgba(0, 0, 0, .2);
        color: #444;
      }
    }

    &--mobile {
      @extend %u-flex;

      border-radius: 34px;

      > * {
        @extend %u-z-index-1;
      }

      $fadeTime: .2s;
      $loadTime: .4s;
      $loadDelay: .4s;

      #{$self}__media {
        transition: $fadeTime opacity #{$loadTime * 1};
      }

      &:after {
        transition: $loadTime width #{$loadTime * 0} linear;
      }

      @include breakpoint(from-large) {
        & + & {
          #{$self}__media {
            transition: $fadeTime opacity #{$loadTime * 2};
          }

          &:after {
            transition: $loadTime width #{$loadTime * 1} linear;
          }
        }

        & + & + & {
          #{$self}__media {
            transition: $fadeTime opacity #{$loadTime * 3};
          }

          &:after {
            transition: $loadTime width #{$loadTime * 2} linear;
          }
        }
      }

      > *,
      &:before {
        width: 260px;
        height: 562px;
        margin: 14px;
        border-radius: 20px;
      }

      &:before,
      &:after {
        @extend %u-content;
        @extend %u-block;
        @extend %u-pos-absolute;
        @extend %u-top;
        @extend %u-left;
      }

      &:after {
        margin: 14px;
        width: 0;
        height: 2px;
        left: 18px;
        top: -2px;
        box-shadow: 0 2px $color-orange;
      }

      &--light {
        box-shadow: 1px 3px 20px rgba(0, 0, 0, .1);

        &:before {
          background-color: #fff;
          box-shadow: 0 0 6px 8px #fff,
                      0 0 2px 12px #eee,
                      0 0 0 14px #ddd;
        }
      }

      &--dark {
        box-shadow: 1px 3px 20px rgba(0, 0, 0, .2s);

        &:before {
          background-color: #333; // Makes sure there's no "gaps"s
          box-shadow: 0 0 14px #666,
                      0 0 0 14px #333;
        }
      }

      &.js-onscreen:after {
        // Animated image loading line
        width: 228px;
      }

      &.js-onscreen > #{$self}__media {
        opacity: 1 !important;
      }
    }
  }

  &--mobile,
  &--desktop {
    @extend %u-jc-center;
  }

  // Just desktop screens
  &--desktop {
    @extend %u-fd-column;
  }

  // A single desktop and a single mobile
  &--mobile-desktop,
  &--desktop-mobile {
    @extend %u-jc-center--upto-large;
    @extend %u-jc-center--from-full;

    @include breakpoint(from-large) {
      flex-wrap: nowrap;
    }

    @include breakpoint(from-large--upto-full) {
      overflow: hidden;

      .c-screens__device--desktop {
        flex-shrink: 0;
        width: $global-max-width;
      }
    }
  }

  &--mobile-desktop {
    @extend %u-jc-flex-start--from-large--upto-full;
  }

  &--desktop-mobile {
    @extend %u-jc-flex-end--from-large--upto-full;

    @include breakpoint(from-full) {
      .c-screens__device--mobile {
        margin-right: 0;
      }
    }
  }

  // Remove the margin-top of a screen shortcode following a screen shortcode
  + #{$self} {
    margin-top: 0;
  }
}
